#    This file is part of darktable.
#    copyright (c) 2016-2020 Roman Lebedev.
#
#    darktable is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    darktable is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with darktable.  If not, see <http://www.gnu.org/licenses/>.

notifications:
  irc:
    channels:
#     - "chat.freenode.net#darktable"
      - secure: "fCQRwV2kMc5ycWjuuim0q+u9DS8D64oIWpfDipvrJDcIsS+MfkfkKrF68kDhNbDNtZHUfvP2Se/0hxUWw825VnyzNZZImrK+giOIGS588apxBPzNY3YMWMzwc4RaCKfyOWvFZDRGJwFzAwPWdSSQh7KMGJj7VibgoyhDTSSJYAk="
    skip_join: true
    template:
      - "%{repository}#%{build_number} (\x037%{branch}\x03 - \x02%{commit}\x02 : \x033%{author}\x03): \x1f\x02%{message}\x02\x1f"
      - "Build details : <%{build_url}>"
  email:
    recipients:
#     - darktable-ci@lists.darktable.org
      - secure: "Fvo7jlL8jpV+asdCmHHeJUK4BYw1JQvAxFpKUPZ/FWjkBfZ3W6is8jRBJVGfnt9TTvD1W2vsaLqeClv1SUfYw0t0keRSP0+0TB5R9ULIfC6/3bFLmp2aDPhBHLRjH3byxiJ46PvADcZ7MC+6jtf0YEEqy6uLbjaX4PiIXINM7Bo="
    on_success: always
    on_failure: always

language: c

dist: focal

env:
  global:
    - SRC_DIR=$TRAVIS_BUILD_DIR
    - BUILD_DIR="$SRC_DIR/build"
    - INSTALL_PREFIX="$SRC_DIR/install"
    - CFLAGS=-pipe CXXFLAGS=-pipe
    - CMAKE_BUILD_TYPE="RelWithDebInfo"
    - GENERATOR="Ninja"
    - TARGET=build

jobs:
 fast_finish: true
 exclude:
  - os: osx
    compiler: gcc
  - os: windows
 #temporary
 allow_failures:
  - os: windows
 include:
  - name: "Linux Clang10"
    os: linux
    compiler: clang
    addons:
      apt:
        sources:
          - sourceline: 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-10 main'
            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
          - clang-10
          - libc++-10-dev
          - libomp-10-dev
          - libclang-common-10-dev
          - llvm-10-dev
    env: CC=clang-10 CXX=clang++-10
  - name: "Linux GCC 9"
    os: linux
    compiler: gcc
  - name: "Linux GCC9 Release Build"
    os: linux
    compiler: gcc
    env:
      - CMAKE_BUILD_TYPE="Release"
  - name: "Linux GCC9 Debug Build"
    os: linux
    compiler: gcc
    env:
      - TARGET=notest
      - CMAKE_BUILD_TYPE="Debug"
  - name: "GCC9 Disabled OpenMP/OpenCL/LUA"
    os: linux
    compiler: gcc
    env: ECO="-DUSE_OPENMP=OFF -DUSE_OPENCL=OFF -DUSE_LUA=OFF"
  - name: "Usermanual"
    os: linux
    dist: bionic
    compiler: gcc
    env: TARGET=usermanual CXX=g++-9 CC=gcc-9 # EXTRA_TMPFS="--tmpfs /tmp"
    addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-9
            - g++-9
    install: 
      - sudo add-apt-repository -y universe
      - sudo add-apt-repository -y multiverse
      - sudo apt-get update
      - sudo apt-get -y install default-jdk-headless default-jre-headless
      - sudo apt-get -y install docbook docbook-xml docbook-xsl docbook-xsl-saxon
      - sudo apt-get -y install fop gnome-doc-utils imagemagick libsaxon-java xsltproc
  - name: "OSX"
    os: osx
    osx_image: xcode11
    env:
      - TARGET=notest
      - ECO="-DUSE_OPENMP=OFF"
  - name: "Worst OS Evar"
    os: windows
    compiler: clang
    env: 
      - GENERATOR="MSYS Makefiles"
      - CC=clang CXX=clang++

addons:
  apt:
    update: true

before_install:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
        choco uninstall -y mingw
        choco upgrade --no-progress -y msys2
        export msys2='cmd //C RefreshEnv.cmd '
        export msys2+='& set MSYS=winsymlinks:nativestrict '
        export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
        export mingw64="$msys2 -mingw64 -full-path -here -c "\"\$@"\" --"
        export msys2+=" -msys2 -full-path -here -c "\"\$@"\" --"
        $msys2 pacman --sync --noconfirm --needed base-devel
        $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain
        $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-clang
        $msys2 pacman -Ql mingw-w64-x86_64-clang
        $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-cmake
        $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-nsis
        ## Install more MSYS2 packages from https://packages.msys2.org/base here
        $msys2 pacman -S --needed --noconfirm  mingw-w64-x86_64-{exiv2,lcms2,dbus-glib,openexr,sqlite3,libxslt,libsoup,libavif,libwebp,libsecret,lua,graphicsmagick,openjpeg2,gtk3,pugixml,libexif,osm-gps-map,libgphoto2,flickcurl,drmingw,gettext,python3,iso-codes}
        $msys2 pacman -S --needed --noconfirm mingw-w64-x86_64-openmp
        ## taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
        export PATH=/C/tools/msys64/mingw64/bin:$PATH
        export PATH=/mingw64/bin:$PATH
        ## export MAKE=mingw32-make  # so that Autotools can find it
        ;;
      linux)
        sudo apt-get install \
          appstream-util \
          desktop-file-utils \
          gettext \
          git \
          intltool \
          libatk1.0-dev \
          libcairo2-dev \
          libcolord-dev \
          libcolord-gtk-dev \
          libcmocka-dev \
          libcups2-dev \
          libcurl4-gnutls-dev \
          libexiv2-dev \
          libflickcurl-dev \
          libgdk-pixbuf2.0-dev \
          libglib2.0-dev \
          libgphoto2-dev \
          libgraphicsmagick1-dev \
          libgtk-3-dev \
          libjpeg-dev \
          libjson-glib-dev \
          liblcms2-dev \
          liblensfun-dev \
          liblua5.2-dev \
          liblua5.3-dev \
          libopenexr-dev \
          libopenjp2-7-dev \
          libosmgpsmap-1.0-dev \
          libpango1.0-dev \
          libpng-dev \
          libpugixml-dev \
          librsvg2-dev \
          libsaxon-java \
          libsecret-1-dev \
          libsoup2.4-dev \
          libsqlite3-dev \
          libtiff5-dev \
          libwebp-dev \
          libx11-dev \
          libxml2-dev \
          libxml2-utils \
          ninja-build \
          perl \
          po4a \
          python3-jsonschema \
          xsltproc \
          zlib1g-dev;
        ;;
      osx)
        brew update && brew tap Homebrew/bundle && cd .ci && brew bundle --verbose;
        ;;
    esac

before_cache:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        # https://unix.stackexchange.com/a/137322/107554
        $msys2 pacman --sync --clean --noconfirm
        ;;
    esac

cache:
  directories:
    - $HOME/AppData/Local/Temp/chocolatey
    - /C/tools/msys64
    - $HOME/Library/Caches/Homebrew

script:
- |-
    case $TRAVIS_OS_NAME in
      linux|osx)
        mkdir "$BUILD_DIR";
        mkdir "$INSTALL_PREFIX";
        "$SRC_DIR/.ci/ci-script.sh";
        ;;
      windows)
        $msys2 mkdir "$BUILD_DIR";
        $msys2 mkdir "$INSTALL_PREFIX";
        $msys2 "$SRC_DIR/.ci/ci-script.sh";
        ;;
    esac

# after_script:
#  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then taskkill //F //PID $(ps -Wla | tr -s ' ' | grep gpg | cut -f2 -d' ') ; fi